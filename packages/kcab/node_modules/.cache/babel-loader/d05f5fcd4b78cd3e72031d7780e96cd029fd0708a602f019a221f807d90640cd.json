{"ast":null,"code":"var _jsxFileName = \"/Users/micalumno/Documents/learning/word-search/packages/kcab/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { WordGrid } from \"@word-search/shared\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gameConfig = {\n  productName: \"K-CAB®\",\n  brandName: \"K-CAB®\",\n  title: \"K-CAB® ADVANTAGE WORD SEARCH\",\n  subtitle: \"Search one word that defines the advantage of KCAB® over other PPIs\",\n  words: [\"FASTACTING\", \"SUSTAINED\", \"EFFECTS\", \"KCAB\"],\n  theme: {\n    primary: '#6BA5B8',\n    secondary: '#FFFFFF',\n    accent: '#1B365D'\n  }\n};\nconst App = () => {\n  _s();\n  const {\n    words,\n    productName,\n    brandName,\n    title,\n    subtitle,\n    theme\n  } = gameConfig;\n  const [foundWords, setFoundWords] = useState([]);\n  const [foundPatterns, setFoundPatterns] = useState({});\n  const [score, setScore] = useState(0);\n  const [showCelebration, setShowCelebration] = useState(false);\n  const [showWordFound, setShowWordFound] = useState(false);\n  const [foundWord, setFoundWord] = useState(\"\");\n  const handleWordFound = word => {\n    if (!foundWords.includes(word)) {\n      const newFoundWords = [...foundWords, word];\n      setFoundWords(newFoundWords);\n      setFoundPatterns(prev => ({\n        ...prev,\n        [word]: \"Found!\"\n      }));\n      setScore(prevScore => prevScore + word.length * 10);\n\n      // Check if all words are found\n      if (newFoundWords.length === words.length) {\n        setTimeout(() => {\n          setShowCelebration(true);\n        }, 500);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/kcab-logo.png\",\n        alt: \"K-CAB 30 Minutes\",\n        className: \"header-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"product-name\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-display\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: [\"Found: \", foundWords.length, \"/4\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(WordGrid, {\n        words: words,\n        onWordFound: handleWordFound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Words to Find:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: words.map(word => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: foundWords.includes(word) ? \"found\" : \"\",\n            children: [word, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"points\",\n              children: `(${word.length * 10} pts)`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, word, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"The \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"K\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), \"ey to a Better\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), \"hoice of\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), \"cid\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), \"locker\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"brLFQUXOw0/3RD0QC32gViimeWk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WordGrid","jsxDEV","_jsxDEV","gameConfig","productName","brandName","title","subtitle","words","theme","primary","secondary","accent","App","_s","foundWords","setFoundWords","foundPatterns","setFoundPatterns","score","setScore","showCelebration","setShowCelebration","showWordFound","setShowWordFound","foundWord","setFoundWord","handleWordFound","word","includes","newFoundWords","prev","prevScore","length","setTimeout","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onWordFound","map","_c","$RefreshReg$"],"sources":["/Users/micalumno/Documents/learning/word-search/packages/kcab/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { WordGrid, WordList, GameConfig } from \"@word-search/shared\";\n\nconst gameConfig: GameConfig = {\n  productName: \"K-CAB®\",\n  brandName: \"K-CAB®\",\n  title: \"K-CAB® ADVANTAGE WORD SEARCH\",\n  subtitle: \"Search one word that defines the advantage of KCAB® over other PPIs\",\n  words: [\n    \"FASTACTING\",\n    \"SUSTAINED\",\n    \"EFFECTS\",\n    \"KCAB\"\n  ],\n  theme: {\n    primary: '#6BA5B8',\n    secondary: '#FFFFFF',\n    accent: '#1B365D'\n  }\n};\n\nconst App: React.FC = () => {\n  const { words, productName, brandName, title, subtitle, theme } = gameConfig;\n\n  const [foundWords, setFoundWords] = useState<string[]>([]);\n  const [foundPatterns, setFoundPatterns] = useState<{ [key: string]: string }>(\n    {}\n  );\n  const [score, setScore] = useState<number>(0);\n  const [showCelebration, setShowCelebration] = useState(false);\n  const [showWordFound, setShowWordFound] = useState(false);\n  const [foundWord, setFoundWord] = useState(\"\");\n\n  const handleWordFound = (word: string) => {\n    if (!foundWords.includes(word)) {\n      const newFoundWords = [...foundWords, word];\n      setFoundWords(newFoundWords);\n      setFoundPatterns((prev) => ({ ...prev, [word]: \"Found!\" }));\n      setScore((prevScore) => prevScore + word.length * 10);\n\n      // Check if all words are found\n      if (newFoundWords.length === words.length) {\n        setTimeout(() => {\n          setShowCelebration(true);\n        }, 500);\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <img src=\"/images/kcab-logo.png\" alt=\"K-CAB 30 Minutes\" className=\"header-logo\" />\n        <h1 className=\"product-name\">{title}</h1>\n        <p className=\"subtitle\">{subtitle}</p>\n      </header>\n\n      <div className=\"game-stats\">\n        <div className=\"score-display\">Score: {score}</div>\n        <div className=\"progress\">Found: {foundWords.length}/4</div>\n      </div>\n\n      <div className=\"game-container\">\n        <WordGrid words={words} onWordFound={handleWordFound} />\n        <div className=\"word-list\">\n          <h3>Words to Find:</h3>\n          <ul>\n            {words.map((word) => (\n              <li key={word} className={foundWords.includes(word) ? \"found\" : \"\"}>\n                {word}\n                <span className=\"points\">{`(${word.length * 10} pts)`}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <footer className=\"footer\">\n        <h3>\n          The <span className=\"highlight\">K</span>ey to a Better{\" \"}\n          <span className=\"highlight\">C</span>hoice of{\" \"}\n          <span className=\"highlight\">A</span>cid{\" \"}\n          <span className=\"highlight\">B</span>locker\n        </h3>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}