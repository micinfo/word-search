{"ast":null,"code":"var _jsxFileName = \"/Users/micinfo/Documents/PROJECT/mic/learning/word-search/src/components/WordList.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordList = ({\n  words,\n  foundWords\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Words to Find:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: words.map((word, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: foundWords.includes(word) ? 'found' : '',\n        children: word\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = WordList;\nexport default WordList;\nvar _c;\n$RefreshReg$(_c, \"WordList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","WordList","words","foundWords","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","word","index","includes","_c","$RefreshReg$"],"sources":["/Users/micinfo/Documents/PROJECT/mic/learning/word-search/src/components/WordList.tsx"],"sourcesContent":["import React from 'react';\n\ninterface WordListProps {\n  words: string[];\n  foundWords: string[];\n}\n\nconst WordList: React.FC<WordListProps> = ({ words, foundWords }) => {\n  return (\n    <div className=\"word-list\">\n      <h3>Words to Find:</h3>\n      <ul>\n        {words.map((word, index) => (\n          <li\n            key={index}\n            className={foundWords.includes(word) ? 'found' : ''}\n          >\n            {word}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default WordList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,QAAiC,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAW,CAAC,KAAK;EACnE,oBACEH,OAAA;IAAKI,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBL,OAAA;MAAAK,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBT,OAAA;MAAAK,QAAA,EACGH,KAAK,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBZ,OAAA;QAEEI,SAAS,EAAED,UAAU,CAACU,QAAQ,CAACF,IAAI,CAAC,GAAG,OAAO,GAAG,EAAG;QAAAN,QAAA,EAEnDM;MAAI,GAHAC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIR,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACK,EAAA,GAhBIb,QAAiC;AAkBvC,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}