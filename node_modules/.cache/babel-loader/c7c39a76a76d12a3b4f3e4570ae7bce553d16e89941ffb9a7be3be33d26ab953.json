{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WordList=_ref=>{let{words,foundWords}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"word-list\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Words to Find:\"}),/*#__PURE__*/_jsx(\"ul\",{children:words.map((word,index)=>/*#__PURE__*/_jsx(\"li\",{className:foundWords.includes(word)?'found':'',children:word},index))})]});};export default WordList;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","WordList","_ref","words","foundWords","className","children","map","word","index","includes"],"sources":["/Users/micinfo/Documents/PROJECT/mic/learning/word-search/src/components/WordList.tsx"],"sourcesContent":["import React from 'react';\n\ninterface WordListProps {\n  words: string[];\n  foundWords: string[];\n}\n\nconst WordList: React.FC<WordListProps> = ({ words, foundWords }) => {\n  return (\n    <div className=\"word-list\">\n      <h3>Words to Find:</h3>\n      <ul>\n        {words.map((word, index) => (\n          <li\n            key={index}\n            className={foundWords.includes(word) ? 'found' : ''}\n          >\n            {word}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default WordList;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAO1B,KAAM,CAAAC,QAAiC,CAAGC,IAAA,EAA2B,IAA1B,CAAEC,KAAK,CAAEC,UAAW,CAAC,CAAAF,IAAA,CAC9D,mBACEF,KAAA,QAAKK,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBR,IAAA,OAAAQ,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBR,IAAA,OAAAQ,QAAA,CACGH,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBACrBX,IAAA,OAEEO,SAAS,CAAED,UAAU,CAACM,QAAQ,CAACF,IAAI,CAAC,CAAG,OAAO,CAAG,EAAG,CAAAF,QAAA,CAEnDE,IAAI,EAHAC,KAIH,CACL,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAR,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}